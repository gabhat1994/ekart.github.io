{"version":3,"sources":["MOdal.js","aem.js","Header.js","Footer.js","Cart.js","App.js","serviceWorker.js","index.js"],"names":["Modal","setAppElement","MOdal","props","state","open","closeModal","bind","this","setState","closed","isOpen","className","totalPrice","totalQuantity","onClick","Component","Shoppingcart","checkout","addcart","header","quantity","total","Header","Aem","Footer","Cart","isLoaded","products","openModal","increment","decrement","addToCart","fetch","then","res","json","result","id","data","i","length","QTY","q","p","price","product","map","key","style","marginTop","src","image","alt","offer","brand","name","mrp","type","scr","value","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.b67520de.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport Modal from 'react-modal';\n\nModal.setAppElement('#root');\nclass  MOdal extends Component {\n    constructor(props){\n      super(props)\n      this.state = {\n        open: true\n      }\n   this.closeModal = this.closeModal.bind(this)\n    }\n    \n   closeModal(){\n     this.setState({open : false})\n     this.props.closed(false)\n   }\n    render(){\n        \n    return(\n       \n  <div>\n       <Modal isOpen ={this.state.open}   className=\"modal\" >\n           <h2>Transcation Successful</h2>\n           <p><label>Total Amout  Due</label> : {this.props.totalPrice} </p>\n           <p><label>Total Quantity </label> : {this.props.totalQuantity} </p>\n           <button  onClick={()=>this.closeModal()}>close</button>\n       </Modal>\n  </div>\n    )\n    }\n}  \n\nexport default MOdal;","export default  {\n    label:{\n        Shoppingcart:\"Shopping cart\",\n        checkout:\"CHECKOUT\",\n        addcart: \"ADD CART\",\n        header:\"Application Demo\",\n        quantity:\"Quantity\",\n        total :\"Total Amount Due\"\n    }   \n}","import React, { Component } from 'react';\nimport './App.css';\nimport Aem  from \"./aem\"\n\n\nclass  Header extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n \n    }\n}\nrender(){\n    return(\n        <header  className=\"header\">{Aem.label.header}</header>\n    )\n}\n  }\n  export default Header;","import React, { Component } from 'react';\nimport './App.css';\nimport Aem  from \"./aem\"\n\n\nclass  Footer extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n \n    }\n}\nrender(){\n    return(\n        <footer className=\"footer\">\n        {Aem.label.Shoppingcart}\n      </footer>\n    )\n}\n  }\n  export default Footer;","import React, { Component } from 'react';\nimport './App.css';\nimport Aem  from \"./aem\"\nimport Modal from './MOdal'\n\nclass  Cart extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n        isLoaded :false,\n        products : null,\n        totalQuantity:0,\n        totalPrice:0,\n        openModal:false \n      }\n      this.increment = this.increment.bind(this)\n      this.decrement = this.decrement.bind(this)\n      this.addToCart = this.addToCart.bind(this)\n      this.checkout= this.checkout.bind(this)\n      this.closed = this.closed.bind(this)\n}\n\ncomponentDidMount() {\n\n    const url =\"./data.json\";\n    fetch(url).then(res => res.json())\n      .then(\n        (result) => {\n          this.setState({\n            isLoaded: true,\n            products: result.products\n          });\n        },\n       \n      )\n  }\n\n  increment(id) {\n    const data = this.state.products\n      for (var i=0; i < data.length; i++) {\n        if (data[i].id === id) {\n          data[i].QTY =  data[i].QTY + 1\n          let q = this.state.totalQuantity + 1\n          let p = this.state.totalPrice + data[i].price\n          this.setState({products : data , totalQuantity:q , totalPrice : p })\n        }\n    }\n    \n  }\n  \n  checkout(){\n   \n    if(this.state.totalPrice != 0 && this.state.totalQuantity != 0){\n    \n      this.setState({openModal : true})\n   \n    }\n   \n  }\n  \n  closed(){\n  \n   this.setState({openModal:false , totalQuantity:0,\n    totalPrice:0, })\n    const data = this.state.products\n      for (var i=0; i < data.length; i++) {\n        if (data[i].QTY > 0) {\n          data[i].QTY = 0\n          this.setState({products : data    })\n        }\n      }\n  \n  }\n  \n  addToCart(product){\n    const data = this.state.products\n    for (var i=0; i < data.length; i++) {\n      if (data[i].id === product.id) {\n        let quantity = this.state.totalQuantity + product.QTY\n        let price = product.QTY > 0 ?  this.state.totalPrice  + ( product.QTY * product.price ) : this.state.totalPrice\n        this.setState({ totalQuantity : quantity , totalPrice : price\n         })\n        data[i].QTY =  data[i].QTY +  product.QTY\n  \n      \n      this.setState({products : data    })\n  \n      }}\n  \n       \n  }\n  \n  decrement(id) {\n    const data = this.state.products\n      for (var i=0; i < data.length; i++) {\n        if (data[i].id === id && data[i].QTY != 0) {\n          data[i].QTY =  data[i].QTY -  1\n          let q = this.state.totalQuantity - 1\n          let p = this.state.totalPrice - data[i].price\n          this.setState({products : data , totalQuantity:q , totalPrice : p })\n        }\n    }\n    \n  }\n  \nrender(){\n    return(\n        <div className=\"content\">\n        { this.state.isLoaded && this.state.products.map( product =>\n              <div key = {product.id} className=\"col-md-12\" style ={{marginTop :\"70px\"}}>\n              <div className=\"col-image\">\n                <img className=\"product-image\" src={product.image} alt=\"product\" />\n        <div className=\"product-offer\">{product.offer}</div>\n              </div>\n              <div className=\"col-details\">\n  \n                <div>{product.brand}</div>\n                <div>{product.name}</div>\n              <div>{product.quantity}</div>\n                <div>{product.mrp}</div>\n                <div><strong>Rs{product.price}</strong></div>\n              </div>\n              <br />\n              <div className=\"product-button\">\n        <button id ={product.id} className=\"product-che\" type=\"button\" onClick={()=>this.addToCart(product)}>{Aem.label.addcart}</button>\n              </div>\n              <div className=\"relative\">\n                <a id={\"add\"+product.id} className=\"product-add-button\" onClick={()=>this.increment(product.id)}><img scr = \"\" alt =\"Add\" /></a>\n                <label>{product.QTY}</label>\n                <a id={\"sub\"+product.id} className=\"product-add-button\"  onClick={()=>this.decrement(product.id)} ><img scr = \"\" alt =\"Sub\" /></a>\n              </div>\n              <hr />\n            </div> \n        )}\n  \n        <div className = \"row\">\n          <label>{Aem.label.quantity}</label> : {this.state.totalQuantity}\n          <br />\n          <label>{Aem.label.total}</label> : {this.state.totalPrice}\n          <div className=\"rel\">\n          <button type=\"button\"  className=\"product-checkout\"  onClick={()=>this.checkout()}>{Aem.label.checkout}</button>\n          </div>\n        </div>\n        {this.state.openModal && <Modal closed={(value) => this.closed()} totalQuantity={this.state.totalQuantity}  totalPrice= {this.state.totalPrice}  > \n          </Modal>\n          }\n        \n      \n          </div>\n    )\n}\n  }\n  export default Cart;","import React, { Component } from 'react';\nimport './App.css';\nimport Modal from './MOdal'\nimport Aem from \"./aem\"\nimport Header from \"./Header\"\nimport Footer from \"./Footer\"\nimport Cart from \"./Cart\"\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n\n    }\n\n  }\n\n\n\n\n  render() {\n    return (\n      <div className=\"grid-container\">\n        <Header />\n        <main className=\"main\">\n        <Cart />\n        </main>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}